namespace: TypoScript=TYPO3.TypoScript

root.@cache.mode = 'uncached'
page.@cache.mode = 'uncached'

/**
 * Root TypoScript template for the Broensfin Site
 */
page = Page {
	head {
		stylesheets = TypoScript:Template
		stylesheets {
			templatePath = 'resource://Famelo.Broensfin/Private/Templates/Page/Default.html'
			sectionName = 'stylesheets'
		}

		scripts = TypoScript:Template
		scripts {
			templatePath = 'resource://Famelo.Broensfin/Private/Templates/Page/Default.html'
			sectionName = 'scripts'
		}
	}

	body {
		templatePath = 'resource://Famelo.Broensfin/Private/Templates/Page/Default.html'
		sectionName = 'body'
		parts {
			menu = Menu {
				entryLevel = 1
				templatePath = 'resource://Famelo.Broensfin/Private/Templates/Parts/Menu.html'
				maximumLevels = 1
				@cache.mode = 'uncached'
			}
			submenu = Menu {
				entryLevel = 2
				templatePath = 'resource://Famelo.Broensfin/Private/Templates/Parts/SubMenu.html'
				maximumLevels = 1
			}

			languageMenu = TYPO3.Neos:LanguageMenu {
				templatePath = 'resource://Famelo.Broensfin/Private/Templates/Parts/LanguageMenu.html'
			}

			userMenu = TypoScript:Template
			userMenu {
				templatePath = 'resource://Famelo.Broensfin/Private/Templates/Parts/UserMenu.html'
				@cache.mode = 'uncached'
			}

			breadcrumb = Breadcrumb
		}
			// These are your content areas, you can define as many as you want, just name them and the nodePath.
		content {
			// Default content section
			main = PrimaryContent {
				nodePath = 'main'
			}
		}
	}
}

default < page

sidebar < page
sidebar.body {
    templatePath = 'resource://Famelo.Broensfin/Private/Templates/Page/Sidebar.html'
}


print < page
print {
	head {
		stylesheets.printCss = TYPO3.TypoScript:Tag {
			@position = 'end 10'
			tagName = 'link'
			attributes {
				media = 'all'
				rel = 'stylesheet'
				href = TYPO3.TypoScript:ResourceUri {
					path = 'resource://TYPO3.NeosDemoTypo3Org/Public/Styles/Print.css'
				}
			}
		}
	}
}

# Text TS Object
prototype(Famelo.Broensfin:Web) {
	title.@process.convertNodeUris = TYPO3.Neos:ConvertNodeUris
}

prototype(Famelo.Broensfin:ContentWrapper) {
	@class = 'Famelo\\Broensfin\\Neos\\ContentWrapperImplementation'
	node = ${node}
	value = ${value}
}

prototype(TYPO3.Neos:Content) {
	@process.contentWrapper = Famelo.Broensfin:ContentWrapper
	@process.contentWrapper.@position = 'start'
}

# Basic implementation of a flexible MultiColumn element, not exposed directly but inherited by all specific MultiColumn content elements
prototype(TYPO3.Neos.NodeTypes:MultiColumn) {
	attributes.class = ${'row'}
	columns.iterationName = 'multiColumnIteration'
}

# Abstract render definition for a single content column in a multi column element
prototype(TYPO3.Neos.NodeTypes:MultiColumnItem){
	attributes.class = ${'col-sm-' + String.split(q(node).parents().first().property('layout'), '-')[multiColumnIteration.index] + (q(node).parents('[instanceof TYPO3.Neos.NodeTypes:Column]').property('centerColumns') ? ' text-center' : '')}
}

prototype(TYPO3.Neos:Plugin) {
	@process.contentWrapper = Famelo.Broensfin:ContentWrapper
	@process.contentWrapper.@position = 'start'
}

prototype(Famelo.Broensfin:Creditor) < prototype(TYPO3.Neos:Plugin) {
	package = 'Famelo.Broensfin'
	controller = 'Creditor'
}